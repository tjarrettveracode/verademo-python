variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

stages:
    - test
    - security
    - build
    - deploy

unit_test:
    image: python:3.6.6
    stage: test
    variables:
        PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    cache:
        paths:
            - .cache/pip
            - venv/
    before_script:
        - apt update && apt install -y zip
    script:
        - pip install virtualenv
        - virtualenv venv
        - source venv/bin/activate
        - pip install -r requirements.txt
        - cd src
        - python manage.py test
    after_script:
        - zip -r veracode.zip src/
    artifacts:
        paths:
            - veracode.zip

srcclr_scan_master:
    image: python:3.6.6
    stage: security
    only:
        - master
    script: curl -sSL https://download.sourceclear.com/ci.sh | bash
        
veracode_static_master:
    image: ctcampbellcom/veracode-tools:centos
    stage: security
    only:
        - master
    script:
        - java -jar /veracode/veracode-wrapper.jar -vid $VERACODE_ID -vkey $VERACODE_KEY
          -action UploadAndScan -appname "$CI_PROJECT_NAME" -createprofile false -scantimeout 30
          -filepath veracode.zip -version "commit $CI_COMMIT_SHORT_SHA pipeline $CI_PIPELINE_ID job $CI_JOB_ID"
          
srcclr_scan_branches:
    image: python:3.6.6
    stage: security
    only:
        - branches
    except:
        - master
    script: curl -sSL https://download.sourceclear.com/ci.sh | bash
    allow_failure: true

veracode_static_branches:
    image: ctcampbellcom/veracode-tools:centos
    stage: security
    only:
        - branches
    except:
        - master
    script:
        - java -jar /veracode/veracode-wrapper.jar -vid $VERACODE_ID -vkey $VERACODE_KEY
          -action UploadAndScan -appname "$CI_PROJECT_NAME" -createprofile false
          -sandboxname $CI_COMMIT_REF_NAME -createsandbox true
          -filepath veracode.zip -version "commit $CI_COMMIT_SHORT_SHA pipeline $CI_PIPELINE_ID job $CI_JOB_ID"
    allow_failure: true

check_veracode_policy_status:
    image: ctcampbellcom/veracode-tools:centos
    stage: security
    only:
        - merge_requests
    script:
        - java -jar /veracode/veracode-wrapper.jar -vid $VERACODE_ID -vkey $VERACODE_KEY
          -action passfail -appname "$CI_PROJECT_NAME" -sandboxname $CI_COMMIT_REF_NAME | ack --passthru '"Pass"'
    allow_failure: true

build-container:
    image: docker:stable
    stage: build
    before_script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    script:
        - docker build -t $IMAGE_TAG .
        - docker push $IMAGE_TAG
        
deploy_review:
    image:
        name: lachlanevenson/k8s-kubectl:latest
        entrypoint: ["/bin/sh", "-c"]
    stage: deploy
    only:
        - branches
    except:
        - master
    environment:
        name: Review/$CI_BUILD_REF_NAME
        url: http://$CI_ENVIRONMENT_SLUG.python.verademo.com
        on_stop: stop_review
    script:
        - kubectl version
        - cd manifests/
        - sed -i "s~__IMAGE_TAG__~${IMAGE_TAG}~" deployment.yaml
        - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" deployment.yaml ingress.yaml service.yaml
        - sed -i "s/__VERSION__/${CI_COMMIT_REF_NAME}/" deployment.yaml ingress.yaml service.yaml
        - if kubectl apply -f deployment.yaml | grep -q unchanged; then
              echo "=> Patching deployment to force image update."
              kubectl patch -f deployment.yaml -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"ci-last-updated\":\"$(date +'%s')\"}}}}}"
          else
              echo "=> Deployment apply has changed the object, no need to force image update."
          fi
        - kubectl apply -f service.yaml || true
        - kubectl apply -f ingress.yaml
        - kubectl rollout status -f deployment.yaml
        - kubectl get deploy,svc,ing,pod -l app="$(echo ${CI_PROJECT_NAME} | tr "." "-")",ref="${CI_ENVIRONMENT_SLUG}"

stop_review:
    image:
        name: lachlanevenson/k8s-kubectl:latest
        entrypoint: ["/bin/sh", "-c"]
    stage: deploy
    variables:
        GIT_STRATEGY: none
    when: manual
    only:
        - branches
    except:
        - master
    environment:
        name: Review/$CI_BUILD_REF_NAME
        action: stop
    script:
        - kubectl version
        - kubectl delete ing -l ref=${CI_ENVIRONMENT_SLUG}
        - kubectl delete all -l ref=${CI_ENVIRONMENT_SLUG}