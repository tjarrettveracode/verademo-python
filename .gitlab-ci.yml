stages:
    - test
    - security
    - build
    - deploy
    - teardown
    
variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    
include:
    - project: 'verademo/security-ci-includes'
      ref: master
      file: '/sast-scan.yml'
    - project: 'verademo/security-ci-includes'
      ref: master
      file: '/sca-scan.yml'

image: python:3.6.6

cache:
    paths:
        - .cache/pip
        - venv/

unit_test:
    stage: test
    script:
        - pip install virtualenv
        - virtualenv venv
        - source venv/bin/activate
        - pip install -r requirements.txt
        - cd src
        - python manage.py test

sca-scan:
    stage: security
    extends: .sca-scan
        
daily-sast-scan-master:
    stage: security
    extends: .sast-policy-scan
    variables:
        VERACODE_FILEPATH: 'src/'
    only:
        variables:
            - $VERACODE_DAILY_SAST == "true"
        refs:
            - master

build-container:
    image: docker:stable
    stage: build
    before_script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    script:
        - docker build -t $IMAGE_TAG .
        - docker push $IMAGE_TAG
        
deploy-review:
    image:
        name: lachlanevenson/k8s-kubectl:latest
        entrypoint: ["/bin/sh", "-c"]
    stage: deploy
    only:
        - branches
    except:
        - master
    environment:
        name: review/$CI_BUILD_REF_NAME
        url: http://$CI_ENVIRONMENT_SLUG.python.verademo.com
        on_stop: stop_review
    script:
        - kubectl version
        - cd manifests/
        - sed -i "s~__IMAGE_TAG__~${IMAGE_TAG}~" deployment.yaml
        - sed -i "s~__CI_ENVIRONMENT_SLUG__~${CI_ENVIRONMENT_SLUG}~" deployment.yaml service.yaml
        - |
          if kubectl apply -f deployment.yaml | grep -q unchanged; then
              echo "=> Patching deployment to force image update."
              kubectl patch -f deployment.yaml -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"ci-last-updated\":\"$(date +'%s')\"}}}}}"
          else
              echo "=> Deployment apply has changed the object, no need to force image update."
          fi
        - kubectl apply -f service.yaml || true
        - kubectl rollout status -f deployment.yaml
        - kubectl get deploy,svc,pod -l app="$(echo ${CI_PROJECT_NAME} | tr "." "-")",ref="${CI_ENVIRONMENT_SLUG}"

stop-review:
    image:
        name: lachlanevenson/k8s-kubectl:latest
        entrypoint: ["/bin/sh", "-c"]
    stage: teardown
    variables:
        GIT_STRATEGY: none
    when: manual
    only:
        - branches
    except:
        - master
    environment:
        name: review/$CI_BUILD_REF_NAME
        action: stop
    script:
        - kubectl version
        - kubectl delete all -l ref=${CI_ENVIRONMENT_SLUG}